version: 5.1.3
type: update
id: rapyd-keydb-addon
name: Rapyd v1 KeyDb 5.1.3
description:
  short: KeyDb for Rapyd Environments

categories:
- apps/dev-and-admin-tools

logo: icon.png
baseUrl: https://repo.rapydapps.cloud/2024v5/b/main/rapyd-keydb/

targetNodes:
  nodeType:
  - llsmp

buttons:
  - confirmText: Do you want to force redeploy KeyDB?
    loadingText: Redeploying ...
    action: deployKeyDB
    caption: Force Redeploy

onInstall:
  - action: deployKeyDB
  - setGlobals:
      nodeId: ${settings.nodeId:}
      nodeGroup: ${targetNodes.nodeGroup:}
      envName: ${env.name}

onUninstall:
  - action: removeKeyDB
  - setGlobals:
      nodeGroup: ${targetNodes.nodeGroup:}

onAfterRedeployContainer:
  - action: deployKeyDB

onAfterClone:
  InstallKeyDbAddon:
    envName: ${event.response.env.envName}
    nodeGroup: ${targetNodes.nodeGroup:}

onAfterRestartNode: 
  - cmd[${targetNodes.nodeGroup:}]: |-
      sudo service keydb restart || true
    user: root

actions:
  cleanupRedis:
    - cmd[${targetNodes.nodeGroup}]: |-
        if grep -a 'AlmaLinux' /etc/system-release ; then
          if dnf list installed | grep -q "redis"; then
            /usr/bin/systemctl stop redis || true
            /usr/bin/systemctl disable redis || true
            /usr/bin/dnf -y remove redis >> /var/log/redis_cleanup.log 2>&1
          fi
        else
          if yum list installed | grep -q "redis"; then
            /usr/bin/systemctl stop redis || true
            /usr/bin/systemctl disable redis || true
            /usr/bin/yum -y remove redis || true
          fi
        fi
        if [ -f /usr/local/lsws/lsphp/etc/php.d/50-redis.ini ]; then
          mv /usr/local/lsws/lsphp/etc/php.d/50-redis.ini /usr/local/lsws/lsphp/etc/php.d/50-redis.disabled
        fi
      user: root

  installKeyDB:
    - api[${targetNodes.nodeGroup}]:
      - method: environment.control.AddContainerEnvVars
        params:
          nodeId: ${nodes.cp.id}
          vars: '{ "REDIS_ENABLED" : "false" }'
          
    - cmd[${targetNodes.nodeGroup:}]: |-
        
        mkdir -p /etc/rapyd/rapyd-keydb-files
        cd /etc/rapyd/rapyd-keydb-files;
        
        rpm --import https://download.keydb.dev/pkg/open_source/rpm/RPM-GPG-KEY-keydb

        if grep -a 'AlmaLinux' /etc/system-release ; then  # if almalinux
          curl -fsSL --retry 3 --retry-delay 5 -o /tmp/keydb-latest.rpm https://download.keydb.dev/pkg/open_source/rpm/centos8/x86_64/keydb-latest-1.el8.x86_64.rpm
          /usr/bin/dnf install -y /tmp/keydb-latest.rpm
        else  # if centos.
          wget https://download.keydb.dev/pkg/open_source/rpm/centos7/x86_64/keydb-latest-1.el7.x86_64.rpm
          sudo yum install -y ./keydb-latest-1.el7.x86_64.rpm
        fi

        rm -f /tmp/keydb-latest.rpm
        curl -O ${baseUrl}/conf/config.sh
        chmod +x config.sh
        /usr/bin/bash config.sh ${baseUrl}

      user: root

  removeKeyDB:
    - cmd[${targetNodes.nodeGroup:}]: |-
        # Attempt a graceful shutdown first
        /usr/bin/systemctl stop keydb || true
        /usr/bin/systemctl disable keydb || true

        if grep -a 'AlmaLinux' /etc/system-release ; then  # if almalinux
          /usr/bin/dnf remove keydb -y >> /var/log/keydb_uninstall.log 2>&1
        else  # if centos.
          /usr/bin/yum remove keydb -y >> /var/log/keydb_uninstall.log 2>&1
        fi

        rm -rf /etc/rapyd/rapyd-keydb-files
        rm -f /usr/local/lsws/lsphp/etc/php.d/90-keydb-session.ini
        rm -f /usr/local/lsws/lsphp/etc/php.d/50-keydb.ini

      user: root
      
  configureKeyDB:
    - cmd[${targetNodes.nodeGroup}]: |-
        echo "Configuring KeyDB as the active cache server..."

        cat > /usr/local/lsws/lsphp/etc/php.d/50-keydb.ini << 'EOFKEYDB'
        extension = redis.so
        EOFKEYDB
        
        chmod 644 /usr/local/lsws/lsphp/etc/php.d/50-keydb.ini
        echo "KeyDB PHP extension enabled."

        rm -f /usr/local/lsws/lsphp/etc/php.d/90-keydb-session.ini
        echo "Removed conflicting session files."

        systemctl enable keydb || true
        systemctl start keydb || true
        systemctl restart lsws || true
        
        echo "KeyDB configuration completed successfully."

      user: root

  deployKeyDB:
    - action: cleanupRedis
    - action: removeKeyDB
    - action: installKeyDB
    - action: configureKeyDB

  InstallKeyDbAddon:
    install: ${baseUrl}manifest.jps
    envName: ${this.envName}
    nodeGroup: ${targetNodes.nodeGroup:}

success: "KeyDB installed and configured successfully!"
