version: 5.1
type: update
id: rapyd-keydb-addon
name: Rapyd v1 KeyDb 5.1
description:
  short: KeyDb for Rapyd v2 Environment

categories:
- apps/dev-and-admin-tools

logo: icon.png
baseUrl: https://repo.rapydapps.cloud/2024v5/b/main/rapyd-keydb/

targetNodes:
  nodeType:
  - llsmp

buttons:
  - confirmText: Do you want to force redeploy KeyDB?
    loadingText: Redeploying ...
    action: deployKeyDB
    caption: Force Redeploy

onInstall:
  - action: deployKeyDB
  - setGlobals:
      nodeId: ${settings.nodeId:}
      nodeGroup: ${targetNodes.nodeGroup:}
      envName: ${env.name}

onUninstall:
  - action: removeKeyDB
  - setGlobals:
      nodeGroup: ${targetNodes.nodeGroup:}

onAfterRedeployContainer:
  - action: deployKeyDB

onAfterClone:
  InstallKeyDbAddon:
    envName: ${event.response.env.envName}
    nodeGroup: ${targetNodes.nodeGroup:}

onAfterRestartNode: 
  - cmd[${targetNodes.nodeGroup:}]: |-
      sudo service keydb restart || true
    user: root

actions:

  removeRedis:
    - cmd[${targetNodes.nodeGroup:}]: |-
        if dnf list installed | grep -q "redis"; then

          /usr/bin/systemctl stop redis || true
          /usr/bin/systemctl disable redis || true

          sleep 5

          if pgrep redis > /dev/null; then
            /usr/bin/killall -9 redis || true
          fi
          if pgrep redis-server > /dev/null; then
              /usr/bin/killall -9 redis-server || true
          fi

          /usr/bin/dnf -y remove redis >> /var/log/redis_install.log 2>&1
        fi
      user: root

  installKeyDB:
    - api[${targetNodes.nodeGroup}]:
      - method: environment.control.SetContainerEnvVars
        params:
          nodeId: ${nodes.cp.id}
          vars: '{ "REDIS_ENABLED" : "false" }'
          
    - cmd[${targetNodes.nodeGroup:}]: |-
    
        mkdir -p /etc/rapyd/
        mkdir -p /etc/rapyd/rapyd-keydb-files
        cd /etc/rapyd/rapyd-keydb-files
      
        rpm --import https://download.keydb.dev/pkg/open_source/rpm/RPM-GPG-KEY-keydb
        curl -fsSL --retry 3 --retry-delay 5 -o /tmp/keydb-latest.rpm https://download.keydb.dev/pkg/open_source/rpm/centos8/x86_64/keydb-latest-1.el8.x86_64.rpm
        /usr/bin/dnf install -y /tmp/keydb-latest.rpm
        rm -f /tmp/keydb-latest.rpm

        curl -O ${baseUrl}/conf/config.sh
        chmod +x config.sh
        /usr/bin/bash config.sh ${baseUrl}

      user: root

  removeKeyDB:
    - cmd[${targetNodes.nodeGroup:}]: |-
        # Attempt a graceful shutdown first
        /usr/bin/systemctl stop keydb || true
        /usr/bin/systemctl disable keydb || true

        # Wait a few seconds for the service to stop
        sleep 5

        # Check if it's still running, and only then use killall
        if pgrep keydb > /dev/null; then
          /usr/bin/killall -9 keydb || true
        fi
        if pgrep keydb-server > /dev/null; then
            /usr/bin/killall -9 keydb-server || true
        fi

        /usr/bin/dnf remove keydb -y >> /var/log/keydb_uninstall.log 2>&1
        rm -rf /etc/rapyd/rapyd-keydb-files

        # Remove the correct PHP session config file
        rm -f /usr/local/lsws/lsphp/etc/php.d/90-keydb-session.ini

      user: root

  deployKeyDB:
    - action: removeRedis
    - action: removeKeyDB
    - action: installKeyDB

  InstallKeyDbAddon:
    install: ${baseUrl}manifest.jps
    envName: ${this.envName}
    nodeGroup: ${targetNodes.nodeGroup:}

success: "Installed Successfully."